# GigGatek Alertmanager Configuration

global:
  # The smarthost and SMTP sender used for mail notifications
  smtp_smarthost: 'smtp.example.com:587'
  smtp_from: 'alertmanager@giggatek.com'
  smtp_auth_username: 'alertmanager@giggatek.com'
  smtp_auth_password: 'your_smtp_password'
  smtp_require_tls: true

  # The integration URL for Slack
  slack_api_url: 'https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX'

# The directory from which notification templates are read
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# The root route on which each incoming alert enters
route:
  # The default receiver
  receiver: 'email-notifications'

  # The time to wait before sending a notification again if it has already been sent successfully
  repeat_interval: 4h

  # Routes for different severity levels
  routes:
  - match:
      severity: critical
    receiver: 'slack-critical'
    continue: true  # Also send to the default receiver

  - match:
      severity: warning
    receiver: 'slack-warnings'
    continue: true  # Also send to the default receiver

  # Group alerts by their name to avoid notification spam
  group_by: ['alertname', 'instance']
  
  # How long to initially wait to send a notification for a group of alerts
  group_wait: 30s
  
  # How long to wait before sending a notification about new alerts that are added to a group
  group_interval: 5m

# Receivers define notification integrations
receivers:
- name: 'email-notifications'
  email_configs:
  - to: 'operations@giggatek.com'
    send_resolved: true
    headers:
      subject: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] GigGatek Alert Notification'

- name: 'slack-critical'
  slack_configs:
  - channel: '#alerts-critical'
    send_resolved: true
    icon_emoji: ':red_circle:'
    title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] CRITICAL ALERT'
    text: >-
      {{ range .Alerts }}
        *Alert:* {{ .Annotations.summary }}
        *Description:* {{ .Annotations.description }}
        *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>
        *Details:*
        {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
        {{ end }}
      {{ end }}

- name: 'slack-warnings'
  slack_configs:
  - channel: '#alerts-warnings'
    send_resolved: true
    icon_emoji: ':warning:'
    title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Warning Alert'
    text: >-
      {{ range .Alerts }}
        *Alert:* {{ .Annotations.summary }}
        *Description:* {{ .Annotations.description }}
        *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>
        *Details:*
        {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
        {{ end }}
      {{ end }}

# Inhibition rules allow to mute a set of alerts given that another alert is firing
inhibit_rules:
  # If a node is down, don't alert about services on that node
  - source_match:
      alertname: 'ServiceDown'
    target_match:
      severity: 'warning'
    equal: ['instance']
