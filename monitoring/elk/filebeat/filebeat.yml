# GigGatek Filebeat Configuration

filebeat.inputs:
- type: container
  paths:
    - /var/lib/docker/containers/*/*.log
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"
    - add_fields:
        target: ''
        fields:
          app: giggatek
          environment: ${ENVIRONMENT:production}
  # Handle multiline logs (e.g., stacktraces)
  multiline:
    pattern: '^\['
    negate: true
    match: after

# Backend application logs (Flask)
- type: log
  enabled: true
  paths:
    - /app/logs/backend/*.log
  tags: ["giggatek", "backend", "flask"]
  fields:
    app: giggatek
    component: backend
  # Pattern for Python tracebacks
  multiline:
    pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}|^Traceback \(most recent call last\):|^\s+File '
    negate: true
    match: after
  fields_under_root: true
  json.keys_under_root: true
  json.add_error_key: true

# Frontend application logs (PHP)
- type: log
  enabled: true
  paths:
    - /var/log/apache2/error.log
    - /var/log/apache2/access.log
    - /var/www/html/logs/*.log
  tags: ["giggatek", "frontend", "php"]
  fields:
    app: giggatek
    component: frontend
  # Pattern for PHP errors and stack traces
  multiline:
    pattern: '^\[[0-9]{4}-[0-9]{2}-[0-9]{2}|^PHP |^#[0-9]+ '
    negate: true
    match: after
  fields_under_root: true

# MySQL logs
- type: log
  enabled: true
  paths:
    - /var/log/mysql/error.log
    - /var/log/mysql/mysql-slow.log
  tags: ["giggatek", "mysql", "database"]
  fields:
    app: giggatek
    component: database
  fields_under_root: true

# Redis logs
- type: log
  enabled: true
  paths:
    - /var/log/redis/redis-server.log
  tags: ["giggatek", "redis", "cache"]
  fields:
    app: giggatek
    component: cache
  fields_under_root: true

# System logs
- type: log
  enabled: true
  paths:
    - /var/log/syslog
    - /var/log/auth.log
  tags: ["giggatek", "system"]
  fields:
    app: giggatek
    component: system
  fields_under_root: true

# Module configuration
filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: false

# Processors for all inputs
processors:
  - add_host_metadata:
      when.not.contains.tags: forwarded
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
  - add_kubernetes_metadata: ~
  # Drop debug logs in production to reduce volume
  - drop_event:
      when:
        equals:
          environment: "production"
        regexp:
          loglevel: "(?i)debug"
  # Add processing timestamp
  - add_fields:
      target: ''
      fields:
        processing_timestamp: '%{+yyyy-MM-dd HH:mm:ss.SSS}'

# Sending to Logstash for further processing
output.logstash:
  hosts: ["logstash:5044"]
  ssl.enabled: false
  loadbalance: true
  # Enable persistent queuing
  queue.mem:
    events: 4096
    flush.min_events: 512
    flush.timeout: 5s

# Enable monitoring of Filebeat itself
monitoring:
  enabled: true
  elasticsearch:
    hosts: ["elasticsearch:9200"]

# Configure logging
logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat
  keepfiles: 7
  permissions: 0644

# Setup template loading
setup.template.enabled: true
setup.template.pattern: "filebeat-*"
setup.template.name: "filebeat"
setup.template.overwrite: false

# Kibana connection for dashboard setup
setup.kibana:
  host: "kibana:5601"
  protocol: "http"

# Setup dashboards
setup.dashboards:
  enabled: true
  retry:
    enabled: true
    interval: 10s
    maximum: 10
