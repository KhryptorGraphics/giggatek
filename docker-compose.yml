version: '3.8'

services:
  # Frontend service (PHP/Apache)
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "8000:80"  # Changed from 80:80 to 8000:80 to avoid conflicts
    volumes:
      - ./frontend:/var/www/html
      - ./frontend/uploads:/var/www/html/uploads
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:5000
    networks:
      - giggatek_network
    restart: unless-stopped

  # Backend service (Python/Flask)
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - ./logs/backend:/app/logs
      - ./run.py:/app/run.py
      - ./giggatek.db:/app/giggatek.db
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - CORS_ALLOWED_ORIGINS=http://localhost:8000,http://localhost,http://frontend
    networks:
      - giggatek_network
    restart: unless-stopped
    command: python run.py

  # Development admin tool - Adminer
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - giggatek_network
    restart: unless-stopped

  # Mailhog - Email testing service
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web interface
    networks:
      - giggatek_network
    restart: unless-stopped

# Define networks
networks:
  giggatek_network:
    driver: bridge
